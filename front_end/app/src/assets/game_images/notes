update() {
	if (!this.gameStarted) return;
	
	const paddleLeftEdge = this.player1Position;
	const paddleRightEdge = this.player1Position + 15; // paddle width is 15 pixels
	const ballPosition = {
	  top: this.ballPosition.top + this.ballVelocity.y,
	  left: this.ballPosition.left + this.ballVelocity.x,
	};
  
	// Check for collision with top or bottom walls
	if (ballPosition.top <= 0 || ballPosition.top >= (600 - 20)) {
	  this.ballVelocity.y = -this.ballVelocity.y;
	}
  
	// Check for collision with left or right walls
	if (ballPosition.left <= 0 || ballPosition.left >= (800 - 20)) {
	  this.ballVelocity.x = -this.ballVelocity.x;
	}
  
	// Check for collision with paddle
	if (ballPosition.left <= paddleRightEdge && ballPosition.left + 20 >= paddleLeftEdge && ballPosition.top + 20 >= this.player1Position && ballPosition.top <= this.player1Position + 60) {
	  console.log('collision with paddle');
	  this.ballVelocity.x = -this.ballVelocity.x;
	  this.ballVelocity.y = -this.ballVelocity.y;
	  ballPosition.left += this.ballVelocity.x;
	  ballPosition.top += this.ballVelocity.y;
	}
  
	// Check for score
	if (ballPosition.left <= 0) {
	  this.player2Score++;
	  this.gameStarted = false;
	} else if (ballPosition.left >= 780) {
	  this.player1Score++;
	  this.gameStarted = false;
	} else {
	  this.ballPosition = ballPosition;
	}
  
	this.socket.emit('updateBallPosition', ballPosition);
	console.log('Ball position:', ballPosition);
	requestAnimationFrame(this.update);
  }
  

  -------
  update() {
	if (!this.gameStarted) return;
	
	const paddleLeftEdge = this.player1Position;
	const paddleRightEdge = this.player1Position + 15; // paddle width is 15 pixels
	const ballPosition = {
		top: this.ballPosition.top + this.ballVelocity.y,
		left: this.ballPosition.left + this.ballVelocity.x,
	};

	if (ballPosition.top <= 0 || ballPosition.top >= (600 - 20)) {
	this.ballVelocity.y = -this.ballVelocity.y;
	}
	if (ballPosition.left <= 0 || ballPosition.left >= (800 - 20)) {
	this.ballVelocity.x = -this.ballVelocity.x;
	}
	if (ballPosition.left <= paddleRightEdge &&
ballPosition.left + 20 >= paddleLeftEdge &&
ballPosition.top + 20 >= this.player1Position &&
ballPosition.top <= this.player1Position + 60) {
console.log('collision with paddle');
this.ballVelocity.x = -this.ballVelocity.x;
this.ballVelocity.y = -this.ballVelocity.y;
}

	if (ballPosition.left <= 0) {
		this.player2Score++;
		this.gameStarted = false;
		} 
	else if (ballPosition.left >= 780) {
		this.player1Score++;
		this.gameStarted = false;
		} 
	else {
		this.ballPosition = ballPosition;
	}
	this.socket.emit('updateBallPosition', ballPosition);
	this.ballPosition = ballPosition;
	console.log('after Ball position:', ballPosition);
	requestAnimationFrame(this.update);
	},
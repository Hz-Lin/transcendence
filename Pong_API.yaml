openapi: 3.0.3
info:
  title: Trascendence
  description: Web project at CODAM school.
  version: 1.0.0

servers:
  - url: 'http://{host}:{port}'
    variables:
      host:
        default: localhost
      port:
        default: '8080'

paths:

  /players:
    post:
      tags:
        - Player
      summary: Add player to the game.
      description: This allows you to add a single player.
      operationId: addPlayer

      requestBody:
        description: This is the player object.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/player'

      responses:
        '201':
          description: The player has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'

    get:
      tags:
        - Player
      summary: Returns all the players.
      description: This allows get all players.
      operationId: getPlayers

      responses:
        '200':
          description: Successful list of players.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/players'

  /players/login:
    get:
      tags:
        - Player
      summary: Logs player into the game
      description: ''
      operationId: loginPlayer
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied

  /players/{playerId}:
    put:
      tags:
        - Player
      summary: Update an existing player.
      description: This allows you to update a single player.
      operationId: updatePlayer
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      requestBody:
        description: This is the player object.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/player'

      responses:
        '204':
          description: The player has been updated.
        '400':
          description: Invalid ID supplied
        '404':
          description: Player not found

    get:
      tags:
        - Player
      summary: Find player by id.
      description: This allows you to get a single player.
      operationId: getPlayerById
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: Successful return of player.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        '400':
          description: Invalid ID supplied
        '404':
          description: Player not found

  /players/{playerId}/uploadAvatar:
    post:
      tags:
        - Player
      summary: Upload a player avatar.
      description: This allows to upload an image avatar for the player.
      operationId: uploadAvatar
      parameters:
        - name: playerId
          in: path
          description: ID of player to update
          required: true
          schema:
            type: integer
            format: int64

      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary

      responses:
        '204':
          description: The image has been upload.
        '415':
          description: Unsupported media type.

  /players/{playerId}/friends:
    post:
      tags:
        - Player
      summary: Add friend.
      description: This allows to add a friend to a player.
      operationId: addFriend
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: friendId
          in: query
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '201':
          description: Friend added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/players'

#todo: complete this
  /players/achievements:
    get:
      tags:
        - Achievements
      summary: Show all the player achievements.
      description: This allows to get all the achievements for a player.
      operationId: getAchievements

      responses:
        '200':
          description: Successful return of achievements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/achievements'

  /players/{playerId}/achievements:
    get:
      tags:
        - Achievements
      summary: Show the achievements for a single player.
      description: This allows to get  the achievements for a single player.
      operationId: getAchievementsByPlayerId
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: Successful return of achievements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/achievement'
        '400':
          description: Invalid ID supplied
        '404':
          description: Player not found

components:
  schemas:
    players:
      type: array
      items:
        $ref: '#/components/schemas/player'

    player:
      type: object
      required:
        - username
      properties:
        playerId:
          readOnly: true
          type: integer
        username:
          type: string
        email:
          type: string
        avatar:
          type: string
        authentication:
          readOnly: true
          type: boolean
        friends:
          type: array

    achievement:
      type: object
      properties:
        playerId:
          type: integer
        username:
          type: string
        achievementName:
          type: string
        gameScore:
          type: integer
      items:
        $ref: '#/components/schemas/achievement'

    achievements:
      type: array
      items:
        $ref: '#/components/schemas/achievement'
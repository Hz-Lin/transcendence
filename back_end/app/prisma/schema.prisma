// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum FriendStatus {
	NOT_FRIENDS
	PENDING
	FRIENDS
}

enum ActivityStatus {
	ONLINE
	INGAME
	OFFLINE
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id             Int             @id @default(autoincrement())
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    avatar         String?
    name           String          @unique
    intraId        Int             @unique
    intraName      String          @unique
    activityStatus ActivityStatus  @default(ONLINE)
    allOtherUsers  AllOtherUsers[]
    dMChannel      DMChannel[]
}

model AllOtherUsers {
	id				Int @id @default(autoincrement())
	intraId 		Int
	otherIntraId	Int
	user			User @relation(fields: [intraId], references: [intraId])
	blockedStatus	Boolean @default(false)
	friendStatus	FriendStatus @default(NOT_FRIENDS)

	@@unique([intraId, otherIntraId])
}

model Client {
    id      String @unique
    intraId Int    @unique
}

model Channel {
    id               Int           @default(autoincrement())
    createdByIntraId Int
    channelName      String        @unique
    userMessages     UserMessage[]
}

model DMChannel {
    id           Int           @id @default(autoincrement())
    otherIntraId Int
    channelName  String        @unique
    userMessages UserMessage[]
    user         User?         @relation(fields: [intraId], references: [intraId])
    intraId      Int?
}

model UserMessage {
    id            Int        @id @default(autoincrement())
    intraId       Int
    name          String
    text          String
    channel       Channel?   @relation(fields: [channelName], references: [channelName])
    channelName   String?    @unique
    DMChannel     DMChannel? @relation(fields: [dMChannelName], references: [channelName])
    dMChannelName String?    @unique
}
